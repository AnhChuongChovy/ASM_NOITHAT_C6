@page "/DangKy"
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Json
@inject HttpClient Http
@using System.Net.Mail
@using System.Net
@using WebAsemly_NoiThat.Model

<EditForm Model="@newAccount" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    @* <ValidationSummary /> *@

    <div class="col-md-6 mt-3" style="width:100%">
        <div class="ml-5">
            <h3 class="font-weight-bold">ĐĂNG KÝ</h3>
            <div class="mt-5">
                <label for="username" class="form-label">TÊN ĐĂNG NHẬP</label>
                <InputText class="form-control input-dangnhap" id="username" @bind-Value="newAccount.TenNguoiDung" />
                <ValidationMessage For="@(() => newAccount.TenNguoiDung)" />
            </div>
            <div class="mt-4">
                <label for="password" class="form-label">MẬT KHẨU</label>
                <InputText type="password" class="form-control input-dangnhap" id="password" @bind-Value="newAccount.MatKhau" />
                <ValidationMessage For="@(() => newAccount.MatKhau)" />
            </div>
            <div class="mt-4">
                <label for="confirmPassword" class="form-label">XÁC NHẬN MẬT KHẨU</label>
                <InputText type="password" class="form-control input-dangnhap" id="confirmPassword" @bind-Value="newAccount.XacNhanMatKhau" />
                <ValidationMessage For="@(() => newAccount.XacNhanMatKhau)" />
            </div>
            <div class="mt-4">
                <label for="email" class="form-label">EMAIL</label>
                <InputText type="email" class="form-control input-dangnhap" id="email" @bind-Value="newAccount.Email" />
                <ValidationMessage For="@(() => newAccount.Email)" />
            </div>
            <div class="mt-4">
                <button type="submit" class="btn btn-outline-secondary" style="width:150px; height:50px; border-radius:10px;">ĐĂNG KÝ</button>
            </div>
            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert mt-4 @messageClass">@message</div>
            }
        </div>
    </div>
</EditForm>

@code {
    private Account newAccount = new Account();
    private string message;
    private string messageClass;

    private async Task HandleRegister()
    {
        try
        {
                // Đăng ký tài khoản
            var response = await Http.PostAsJsonAsync("https://localhost:44320/api/Account/register", newAccount);
            if (response.IsSuccessStatusCode)
            {
                message = "Đăng ký thành công.";
                messageClass = "alert-success";
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                message = $"Đăng ký không thành công: {error}";
                messageClass = "alert-danger";
            }
            
        }
        catch (Exception ex)
        {
            message = $"Đã xảy ra lỗi: {ex.Message}";
            messageClass = "alert-danger";
        }
    }
}

