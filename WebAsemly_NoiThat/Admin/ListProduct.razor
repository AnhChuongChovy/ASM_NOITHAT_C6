@page "/admin/list-products"
@inject HttpClient Http
@layout AdminLayout
@inject NavigationManager NavigationManager
@using WebAsemly_NoiThat.Model

<div class="row mt-3">
    <div class="col-md-6">
        <h3>Danh Sách Sản Phẩm</h3>
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-6">
                <input type="text" class="form-control w-100" @bind="searchTerm" @oninput="SearchProducts" placeholder="Tìm kiếm theo tên sản phẩm..." />
            </div>
            <div class="col-md-6">
                <button class="btn btn-primary" @onclick="AddProduct">Thêm sản phẩm</button>
            </div>
        </div>
    </div>
</div>


<table class="table table-striped table-bordered mt-3">
    <thead>
        <tr>
            <th class="text-center">ID</th>
            <th class="text-center">Tên Sản Phẩm</th>
            <th class="text-center">Giá</th>
            <th class="text-center">Số Lượng</th>
            <th class="text-center">Hình Ảnh</th>
            <th class="text-center">Trạng Thái</th>
            <th class="text-center">Thao Tác</th>
        </tr>
    </thead>
    <tbody>
        @if (filteredProducts != null && filteredProducts.Any())
        {
            @foreach (var product in filteredProducts)
            {
                <tr>
                    <td style="text-align: center; vertical-align: middle;">@product.ID</td>
                    <td style="vertical-align: middle;">@product.TenSP</td>
                    <td style="text-align: center; vertical-align: middle;">@product.Gia</td>
                    <td style="text-align: center; vertical-align: middle;">@product.SoLuongTrongKho</td>
                    <td style="text-align: center; vertical-align: middle;"><img src="@product.HinhAnh" width="100px" height="100px" /></td>
                    @if(product.TrangThai == "Hiện")
                    {
                        <td style="text-align: center; vertical-align: middle; color:green">@product.TrangThai</td>

                    }
                    else
                    {
                        <td style="text-align: center; vertical-align: middle; color:red">@product.TrangThai</td>
                    }
                    <td style="vertical-align: middle; text-align: center;">
                        <a class="bi bi-eye btn btn-success" href="@($"/admin/product-details/{product.ID}")"></a>
                        <button class="btn btn-primary bi bi-pen" @onclick="() => EditProduct(product.ID)"></button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="9">Không có sản phẩm nào.</td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation example mb-5">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <a class="page-link" @onclick="PreviousPage" disabled="@(!HasPreviousPage)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
            <a class="page-link" @onclick="NextPage" disabled="@(!HasNextPage)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>


@code {
    private List<Product> products = new List<Product>();
    private List<Product> filteredProducts = new List<Product>();
    private int currentPage = 0;
    private int pageSize = 10;
    private bool hasMoreProducts = true;
    private bool hasPreviousPage = false;

    private bool HasNextPage => hasMoreProducts;
    private bool HasPreviousPage => hasPreviousPage;

    private string searchTerm = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        var response = await Http.GetFromJsonAsync<List<Product>>($"https://localhost:44320/api/Product?pageIndex={currentPage}&pageSize={pageSize}");

        if (response != null && response.Any())
        {
            products = response; // Hiển thị 5 danh mục hiện tại
            filteredProducts = products;
            hasMoreProducts = response.Count == pageSize;
            hasPreviousPage = currentPage > 0;
        }
        else
        {
            hasMoreProducts = false;
            hasPreviousPage = currentPage > 0;
        }
    }

    private async Task NextPage()
    {
        currentPage++;
        await LoadProducts();
    }

    private async Task PreviousPage()
    {
        if (currentPage > 0)
        {
            currentPage--;
            await LoadProducts();
        }
    }

    private void SearchProducts(ChangeEventArgs e)
    {
        searchTerm = e.Value.ToString();
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredProducts = products;
        }
        else
        {
            filteredProducts = products
                .Where(c => c.TenSP.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }

    private void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"/admin/edit-product/{id}");
    }

    private void AddProduct()
    {
        NavigationManager.NavigateTo("/admin/add-products");
    }
}
