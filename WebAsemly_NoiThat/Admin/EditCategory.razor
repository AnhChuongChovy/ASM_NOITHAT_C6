@page "/edit-category/{Id:int}"
@inject HttpClient Http
@layout AdminLayout
@inject NavigationManager NavigationManager
@using WebAsemly_NoiThat.Model

<h3 class="mt-3">Chỉnh Sửa Danh Mục</h3>

<EditForm Model="@category" OnValidSubmit="@SaveCategory">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-md-3">
            <label for="tenDanhMuc" class="form-label">Tên danh mục</label>
            <InputText id="tenDanhMuc" class="form-control" @bind-Value="category.TenDanhMuc" />
        </div>
        <div class="col-md-3">
            <label for="hinhAnh" class="form-label">Hình ảnh</label>
            <InputFile id="hinhAnh" OnChange="HandleFileSelected" class="form-control" />
        </div>
        <div class="col-md-3">
            @if (!string.IsNullOrEmpty(category.HinhAnh))
            {
                <img src="@category.HinhAnh" width="100px" height="100px" />
            }
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-md-3">
            <label for="trangthaiDanhMuc" class="form-label">Trạng thái</label>
            <select id="trangthaiDanhMuc" class="form-control" @bind="category.TrangThai">
                <option value="">Chọn trạng thái</option>
                <option value="Hiện">Hiện</option>
                <option value="Ẩn">Ẩn</option>
            </select>
        </div>
    </div>
    <button class="btn btn-primary mt-3" type="submit">Lưu</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private Category category = new Category();
    private IBrowserFile selectedFile;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategory();
    }

    private async Task LoadCategory()
    {
        try
        {
            category = await Http.GetFromJsonAsync<Category>($"https://localhost:44320/api/Category/{Id}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading category: {ex.Message}");
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var content = new MultipartFormDataContent();
            var streamContent = new StreamContent(file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15)); // 15 MB
            streamContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(file.ContentType);
            content.Add(streamContent, "file", file.Name);

            var response = await Http.PostAsync("https://localhost:44320/api/Category/upload-image", content);

            if (response.IsSuccessStatusCode)
            {
                // Sử dụng lớp dữ liệu UploadImageResponse
                var result = await response.Content.ReadFromJsonAsync<UploadImageResponse>();
                if (result != null)
                {
                    var fileUrl = result.FileUrl;
                    category.HinhAnh = fileUrl; // Lưu URL hình ảnh vào thuộc tính của category
                    Console.WriteLine($"Hình ảnh đã được tải lên: {category.HinhAnh}");
                }
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Lỗi khi tải lên hình ảnh: {errorMessage}");
            }
        }
    }


    private async Task SaveCategory()
    {
        try
        {
            var response = await Http.PutAsJsonAsync($"https://localhost:44320/api/Category/{category.ID}", category);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/admin/list-categories");
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Lỗi khi lưu danh mục: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving category: {ex.Message}");
        }
    }
}
