@page "/admin/edit-product/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@layout AdminLayout
@using WebAsemly_NoiThat.Model

<h3 class="mt-3">Chỉnh sửa sản phẩm</h3>

<EditForm Model="@product" OnValidSubmit="@SaveProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="row">
            <!-- Hàng 1: 3 cột -->
            <div class="col-md-4">
                <div class="form-group">
                    <label for="tenSP">Tên sản phẩm</label>
                    <InputText id="tenSP" class="form-control" @bind-Value="product.TenSP" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="idLoaiDM">Loại danh mục</label>
                    <select id="idLoaiDM" class="form-control" @bind="product.IDLoaiDM">
                        @foreach (var categoryType in categoryTypes)
                        {
                            <option value="@categoryType.ID">@categoryType.TenLoaiDanhMuc</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="gia">Giá</label>
                    <InputNumber id="gia" class="form-control" @bind-Value="product.Gia" />
                </div>
            </div>
            
        </div>

        <div class="row">
            <!-- Hàng 2: 1 cột lớn -->
            <div class="col-md-4">
                <div class="form-group">
                    <label for="vatLieu">Vật liệu</label>
                    <InputText id="vatLieu" class="form-control" @bind-Value="product.VatLieu" />
                </div>
            </div> 
            <div class="col-md-4">
                <div class="form-group">
                    <label for="soLuongTrongKho">Số lượng trong kho</label>
                    <InputNumber id="soLuongTrongKho" class="form-control" @bind-Value="product.SoLuongTrongKho" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="kichThuoc">Kích thước</label>
                    <InputText id="kichThuoc" class="form-control" @bind-Value="product.KichThuoc" />
                </div>
            </div>
            <div class="col-md-4">
                <label for="trangthaiDanhMuc" class="form-label">Trạng thái</label>
                <select id="trangthaiDanhMuc" class="form-control" @bind="product.TrangThai">
                    <option value="">Chọn trạng thái</option>
                    <option value="Hiện">Hiện</option>
                    <option value="Ẩn">Ẩn</option>
                </select>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="hinhAnh">Hình ảnh</label>
                    <InputFile OnChange="HandleFileSelected" class="form-control" />
                    
                </div>
            </div>
            <div class="col-md-4">
                @if (product.HinhAnh != null)
                {
                    <img src="@product.HinhAnh" width="100px" height="100px" class="mt-2" />
                }
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="moTa">Mô tả</label>
                    <textarea id="moTa" class="form-control" @bind="product.MoTa" rows="4"></textarea>
                </div>
            </div>

        </div>
        <button type="submit" class="btn btn-primary">Lưu</button>

    </div>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }
    private Product product = new Product();
    private List<CategoryType> categoryTypes = new List<CategoryType>();

    protected override async Task OnInitializedAsync()
    {
        product = await Http.GetFromJsonAsync<Product>($"https://localhost:44320/api/Product/{Id}");
        categoryTypes = await Http.GetFromJsonAsync<List<CategoryType>>("https://localhost:44320/api/CategoryType/categorytypes");
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var content = new MultipartFormDataContent();
            var streamContent = new StreamContent(file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15)); // 15 MB
            streamContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(file.ContentType);
            content.Add(streamContent, "file", file.Name);

            var response = await Http.PostAsync("https://localhost:44320/api/Product/upload-image", content);

            if (response.IsSuccessStatusCode)
            {
                // Sử dụng lớp dữ liệu UploadImageResponse
                var result = await response.Content.ReadFromJsonAsync<UploadImageResponse>();
                if (result != null)
                {
                    var fileUrl = result.FileUrl;
                    product.HinhAnh = fileUrl; // Lưu URL hình ảnh vào thuộc tính của category
                    Console.WriteLine($"Hình ảnh đã được tải lên: {product.HinhAnh}");
                }
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Lỗi khi tải lên hình ảnh: {errorMessage}");
            }
        }
    }

    private async Task SaveProduct()
    {
        var response = await Http.PutAsJsonAsync($"https://localhost:44320/api/Product/{product.ID}", product);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/admin/list-products");
        }
        else
        {
            // Handle the error
        }
    }

    
}
