@page "/admin/product-details/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@layout AdminLayout
@using WebAsemly_NoiThat.Model

<h3 class="mt-3">Chi Tiết Sản Phẩm</h3>

@if (product != null)
{
    <div class="row">
        <div class="col-md-4">
            <img src="@product.HinhAnh" alt="@product.TenSP" class="img-fluid" />
        </div>
        <div class="col-md-8">
            <h4>@product.TenSP</h4>
            <p><strong>Giá:</strong> @product.Gia.ToString("N0")đ</p>
            <p><strong>Mô tả:</strong> @product.MoTa</p>
            <p><strong>Vật liệu:</strong> @product.VatLieu</p>
            <p><strong>Số lượng trong kho:</strong> @product.SoLuongTrongKho</p>
            <p><strong>Kích thước:</strong> @product.KichThuoc</p>
            <p><strong>Danh mục con:</strong> @product.CategoryType?.TenLoaiDanhMuc</p>
            <button class="btn btn-primary" @onclick="EditProduct">Chỉnh sửa</button>
        </div>
    </div>
}
else
{
    <p>Đang tải dữ liệu...</p>
}

@code {
    [Parameter]
    public int id { get; set; }

    private Product product;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            product = await Http.GetFromJsonAsync<Product>($"https://localhost:44320/api/Product/{id}");
            if (product == null)
            {
                // Xử lý khi sản phẩm không tồn tại
                NavigationManager.NavigateTo("/admin/list-products");
            }
        }
        catch (Exception ex)
        {
            // Xử lý lỗi
            Console.WriteLine($"Error fetching product: {ex.Message}");
            NavigationManager.NavigateTo("/admin/list-products");
        }
    }

    private void EditProduct()
    {
        NavigationManager.NavigateTo($"/admin/edit-product/{id}");
    }
}
